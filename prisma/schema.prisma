// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Comment {
  id        String
  createdAt DateTime @default(now())
  content   String
  author    Member   @relation(fields: [authorId, projectId], references: [id, projectId])
  task      Task     @relation(fields: [taskId, projectId], references: [id, projectId])
  project   Project  @relation(fields: [projectId], references: [id])

  authorId  String
  taskId    String
  projectId String

  @@id([id, taskId, projectId])
}

model Task {
  id      String
  project Project @relation(fields: [projectId], references: [id])
  content String

  assignees Assignee[]
  comments  Comment[]
  scrums    Scrum[]

  projectId String

  @@id([id, projectId])
}

model Assignee {
  task      Task    @relation(fields: [taskId, projectId], references: [id, projectId])
  member    Member  @relation(fields: [memberId, projectId], references: [id, projectId])
  project   Project @relation(fields: [projectId], references: [id])
  taskId    String
  memberId  String
  projectId String

  @@id([taskId, memberId, projectId])
}

model Project {
  id        String     @id
  name      String
  members   Member[]
  tasks     Task[]
  invites   Invite[]
  comments  Comment[]
  assignees Assignee[]
  scrums    Scrum[]
  Snapshot  Snapshot[]
}

model Invite {
  id        String    @id
  expires   DateTime?
  usages    Int
  project   Project   @relation(fields: [projectId], references: [id])
  creator   Member    @relation(fields: [creatorId, projectId], references: [id, projectId])
  creatorId String
  projectId String
}

model Member {
  id      String
  project Project @relation(fields: [projectId], references: [id])
  name    String
  login   String  @unique
  avatar  String
  role    Int

  comments Comment[]
  assigned Assignee[]
  invites  Invite[]

  projectId String

  @@id([id, projectId])
}

model Scrum {
  id      String
  project Project @relation(fields: [projectId], references: [id])
  task    Task?   @relation(fields: [taskId, projectId], references: [id, projectId])
  content String?
  column  Int

  projectId String
  taskId    String

  @@id([id, projectId])
}

model Snapshot {
  id      String  @unique
  project Project @relation(fields: [projectId], references: [id])

  projectId String
}
